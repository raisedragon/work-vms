<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:mongo="http://www.springframework.org/schema/data/mongo"
    xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
        http://www.springframework.org/schema/task   
        http://www.springframework.org/schema/task/spring-task-3.0.xsd"
		default-lazy-init="true">

	<description>Spring公共配置</description>
	
	
	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.winit">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	 
	
	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:/mybatis/mybatis-config.xml" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.winit.vms.*.entity" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath*:/mybatis/vms/*Mapper.xml" />
	</bean>

	
	<!-- 自动扫描映射器 -->
	<!-- spring与mybatis整合配置，扫描所有dao 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.winit.**.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean> -->
	
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.winit.vms.**.dao" />
		<property name="annotationClass" value="com.winit.common.orm.mybatis.MyBatisRepo"/>
	</bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="create*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="merge*" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="put*" propagation="REQUIRED" />
            <tx:method name="clean*" propagation="REQUIRED" />
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="load*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="count*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="query*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="list*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="*" propagation="SUPPORTS" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <!--<aop:pointcut id="daoOperation" expression="execution(* com.winit.*.*.dao.*.*(..))" />-->
      <aop:pointcut id="managerOperation" expression="execution(* com.winit.*.*.manager.*.*(..))" />
<!--         <aop:pointcut id="serviceOperation" expression="execution(* com.winit.*.*.service.*.*(..))" /> -->
        <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="daoOperation" />-->
         <aop:advisor advice-ref="txAdvice" pointcut-ref="managerOperation" />
<!--         <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" /> -->
    </aop:config>

	<!-- 定义aspectj -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- hibernate validator -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

	<!-- trigger触发器 -->
	<!-- <task:annotation-driven />  
    <task:scheduled-tasks>  
        <task:scheduled ref="quartzJob" method="syncDemoOrderToTms" cron="5/3 * * * * ?" />
        <task:scheduled ref="quartzJob" method="syncDemoOrderToDep" cron="5/3 * * * * ?" />
        <task:scheduled ref="quartzJob" method="receiverDepToOverOms" cron="5/3 * * * * ?" />
        <task:scheduled ref="quartzJob" method="syncDemoOverOrderToDep" cron="5/3 * * * * ?" />
        <task:scheduled ref="quartzJob" method="receiverDepToOms" cron="5/3 * * * * ?" />  
    </task:scheduled-tasks>   -->
    <!--<task:annotation-driven /> 
      <bean id="taskTest" class="com.winit.oms.quartz.QuartzJob"></bean> -->
    <!--  这里表示的是从第五秒开始 ，每三秒执行一次 （而不是 三分之五 秒执行一次）   -->
    <!-- <task:scheduled-tasks>  
        <task:scheduled ref="taskTest" method="syncDemoOrderToTms" cron="5/5 * * * * ?" />  
    </task:scheduled-tasks>   -->
    <!-- 生产环境 -->
	<beans profile="prod">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.properties"/>
		<import resource="classpath*:conf/dubbo.xml" />
		<import resource="classpath*:conf/dataSource.xml" />
		<import resource="classpath*:conf/applicationBeans.xml" />
	</beans>
	
	<!-- 开发环境 -->
	<beans profile="dev">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:conf/application.dev.properties"/>
		<!-- <import resource="classpath:/dubbo.xml" /> -->
		<import resource="classpath*:conf/dataSource.xml" />
		<import resource="classpath*:conf/applicationBeans.xml" />
	</beans>
 
	<!-- functional test环境 -->
 	<beans profile="func">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:conf/application.func.properties" />
		<import resource="classpath*:conf/dubbo.xml" />
		<import resource="classpath*:conf/dataSource.xml" />
		<import resource="classpath*:conf/applicationBeans.xml" />
	</beans>

	<!-- junit测试环境 -->
	<beans profile="test">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:conf/application.test.properties" />
		<!-- <import resource="classpath*:/dubbo.xml" /> -->
		<import resource="classpath*:conf/dataSource.xml" />
		<import resource="classpath*:conf/applicationBeans.xml" />
	</beans> 
	
	
	 
</beans>